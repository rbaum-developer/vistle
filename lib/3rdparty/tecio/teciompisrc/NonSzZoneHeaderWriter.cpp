#include "NonSzZoneHeaderWriter.h"
#include "ThirdPartyHeadersBegin.h"
#include <boost/assign.hpp>
#include "ThirdPartyHeadersEnd.h"
#include "AltTecUtil.h"
#include "ItemSetIterator.h"
#include "NonSzZoneFileLocations.h"
#include "writeValueArray.h"
namespace tecplot { namespace ___3931 { NonSzZoneHeaderWriter::NonSzZoneHeaderWriter( uint32_t                        fileVersion, ItemSetIterator&                varIter, ___4633                     zone, ___4633                     ___341, ___37&                     ___36, NonSzZoneFileLocations const& ___4608) : ZoneHeaderWriterAbstract(fileVersion, varIter, zone, ___341, ___36) , m_zoneFileLocations(___4608) {} NonSzZoneHeaderWriter::~NonSzZoneHeaderWriter() {} uint64_t NonSzZoneHeaderWriter::sizeInFile(bool ___2000) const { size_t const numVarsToWrite = static_cast<size_t>(m_varIter.___2810()); uint64_t ___3356 = zoneHeaderTagsSizeInFile(3  , ___2000) + arraySizeInFile<uint64_t, true  >(numVarsToWrite, ___2000); return ___3356; } ___372 NonSzZoneHeaderWriter::write(FileWriterInterface& fileWriter) const { ___372 ___2037 = ___4224; ___4349 const numVarsToWrite = m_varIter.___2810(); try { ___3943 ___3942 = boost::assign::map_list_of<uint16_t, uint64_t> ((uint16_t)___4339, (uint64_t)0) ((uint16_t)___2723, (uint64_t)m_zoneFileLocations.___2496) ((uint16_t)USER_FACE_NBR_FILE_LOC_TAG, (uint64_t)m_zoneFileLocations.___2661); uint64_t tagFilePos = fileWriter.fileLoc(); ___2037 = ___4562(fileWriter, ___3942); if (___2037) { ___3942[___4339] = fileWriter.fileLoc(); ___2037 = ___4560<uint64_t, true, 0>(fileWriter, appendZoneSuffix(VAR_FILE_LOC_DESCRIPTION).c_str(), ___2675 - m_baseZone, (size_t)numVarsToWrite, &m_zoneFileLocations.___2671[0]); } uint64_t finalFilePos = fileWriter.fileLoc(); ___2037 = ___2037 && fileWriter.___3457(tagFilePos) && ___4562(fileWriter, ___3942) && fileWriter.___3457(finalFilePos); } catch(std::bad_alloc const&) { ___2037 = ___1184("Out of memory while writing zone %d header.", ___2675+1); } catch(...) { ___2037 = ___1184("Unrecoverable error while writing zone %d header.", ___2675+1); } ENSURE(VALID_BOOLEAN(___2037)); return ___2037; } }}
