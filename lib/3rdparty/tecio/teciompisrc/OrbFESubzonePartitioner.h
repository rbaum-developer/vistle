 #pragma once
#include "FESubzonePartitionerInterface.h"
#include "OrthogonalBisection.h"
namespace tecplot { namespace ___3931 { class OrbFESubzonePartitioner : public virtual FESubzonePartitionerInterface { UNCOPYABLE_CLASS(OrbFESubzonePartitioner); private: ___4633 const                 ___2675; ItemAddress64::ItemOffset_t const m_fixedSubzoneSize; OrthogonalBisection               m_orb; ItemAddressArray                  m_szCoordsOfOrginalIndexes; ___372 partitionIntoSubzones(___37& ___36); public: OrbFESubzonePartitioner( ___37&                          ___36, ___4633                          zone, ItemAddress64::SectionOffset_t       section, OrthogonalBisection::BisectionType_e bisectionType, ItemAddress64::ItemOffset_t          fixedSubzoneSize); virtual ~OrbFESubzonePartitioner(); virtual ___81                     numIndexes() const; virtual ItemAddress64::SubzoneOffset_t numSubzones() const; virtual ItemAddress64::ItemOffset_t    numItemsInSubzone(ItemAddress64::SubzoneOffset_t ___3878) const; virtual ___81                     baseIndex() const; virtual ___81                     indexAtItemAddress(ItemAddress64 const& ___2087) const; virtual ItemAddress64 const&           itemAddressAtIndex(___81 index) const; virtual void                           setItemAddressAtIndex(___81 index, ItemAddress64 const& ___2087); }; }}
