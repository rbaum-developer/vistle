 #pragma once
#include "ThirdPartyHeadersBegin.h"
#include <boost/shared_ptr.hpp>
#include "ThirdPartyHeadersEnd.h"
#include "ClassMacros.h"
#include "IJKZoneInfo.h"
#include "SZLOrderedZoneHeaderWriter.h"
#include "ZoneWriterAbstract.h"
namespace tecplot { namespace ___3931 { class ___1350; class ___1879; class ItemSetIterator; class SZLOrderedZoneWriter : public ___4706 { UNCOPYABLE_CLASS(SZLOrderedZoneWriter); public: SZLOrderedZoneWriter( uint32_t                                    fileVersion, ItemSetIterator&                            varIter, ___4633                                 zone, ___4633                                 ___341, std::vector<___372> const&               ___4561, ___372                                   ___4496, ___37&                                 ___36, boost::shared_ptr<___1879 const> const& ijkZoneInfo); virtual ~SZLOrderedZoneWriter(); static uint64_t fieldDataSubzoneHeaderFileSize(bool ___2000); protected: SZLOrderedZoneHeaderWriter m_headerWriter; boost::shared_ptr<___1879 const> const m_ijkZoneInfo; void setZoneNumberLabel(std::string const& zoneNumberLabel); private: std::string m_zoneNumberLabel; ___1390 ___2671; virtual uint64_t zoneConnectivityFileSize(bool ___2000); virtual uint64_t zoneDataFileSize(bool ___2000); virtual uint64_t zoneHeaderFileSize(bool ___2000); virtual ___372 writeZoneConnectivity(FileWriterInterface& szpltFile); virtual ___372 writeZoneData(FileWriterInterface& szpltFile); virtual ___372 writeZoneHeader(FileWriterInterface& szpltFile); ___372 calculateVarSubzoneMinMaxes(___4349 ___4333, ___2479& nszDataMinMax, ___2479& cszDataMinMax); ___372 ___4509(FileWriterInterface& file, ValueLocation_e ___4323, ___4349 ___4333, ItemAddress64::SubzoneOffset_t ___3878); template<typename T, bool isBitArray> ___372 ___4493(FileWriterInterface& szpltFile, ___1350 const& ___1349, ItemAddress64::SubzoneOffset_t ___467); template<typename T, bool isBitArray> ___372 ___4528(FileWriterInterface& szpltFile, ___1350 const& ___1349, ___1842 const& storedIJK, ItemAddress64::SubzoneOffset_t ___2732); template <typename T, bool isBitArray> uint64_t cellSubzoneFieldDataFileSize(bool ___2000, ItemAddress64::SubzoneOffset_t ___467) const; template <typename T, bool isBitArray> uint64_t nodeSubzoneFieldDataFileSize(bool ___2000, ItemAddress64::SubzoneOffset_t ___2732) const; template <typename T, bool isBitArray> uint64_t subzoneFieldDataFileSize(bool ___2000, ItemAddress64::SubzoneOffset_t ___3878, ValueLocation_e ___4323) const; template <typename T, bool isBitArray> ___372 writeVariable(FileWriterInterface& szpltFile, ___4349 const ___4333, ___2479 const& nszDataMinMax, ___2479 const& cszDataMinMax); template <typename T, bool isBitArray> uint64_t variableFileSize(bool ___2000, ValueLocation_e ___4323); template<typename T, bool isBitArray> ___372 ___1777( ___1350 const& ___1349, ___1842 const&       ___1878, ___1842 const&       ___1850, ___1842 const&       ___1859, ___2238<T>& ___4297); }; }}
