 #ifndef _FACE_H_
 #define _FACE_H_
 #if defined EXTERN
 #undef EXTERN
 #endif
 #if defined ___1271
 #define EXTERN
 #else
 #define EXTERN extern
 #endif
#include "ItemAddress.h"
#include "connectivity/FECellType.h"
namespace tecplot { class ___458; class ElemToNodeMap; } namespace tecplot { namespace ___2138 { class ValueProducerInterface; }} inline ___372 ___2006( tecplot::ItemAddress64 const& ___2708, tecplot::ItemAddress64 const& ___2709, tecplot::ItemAddress64 const& ___2710, tecplot::ItemAddress64 const& ___2711) { return ((___2708 == ___2709 && ___2710 == ___2711) || (___2708 == ___2711 && ___2709 == ___2710) || (___2708 == ___2710)                   || (___2709 == ___2711)); } typedef enum { ___1299, ___1300, ___1296, ___1298, END_FaceObscuration_e, ___1297 = ___329 } FaceObscuration_e; EXTERN ___2225 ___1752(___2225 ___2807, ___2225 ___2812, ___2225 ___2815, ___2225 ___1143, ___2225 ___1250); void ___1774( ___804 const*                                ___803, ___800 const*                                ___799, tecplot::ItemAddress64 const&                  surfaceElemAddress, tecplot::___2138::ValueProducerInterface const& ___2742, ___1144                               ___3094, ___1144                               ___1136, tecplot::ItemAddress64&                        NeighborSurfaceCellAddr, ___1170&                                    ___2692, tecplot::___458&                    ___457); FaceObscuration_e ___1663( ___804 const*               ___803, ___800 const*               ___799, tecplot::ItemAddress64 const& elemAddress, ___2225                     ___1440, ___372                     ConsiderValueBlanking, ___372                     ConsiderIJKBlanking, ___372                     ConsiderDepthBlanking, ___372                     ConsiderClipBlanking, tecplot::___458&   ___457); EXTERN ___1170 ___1763(ZoneType_e ___4690); ___1170 GetOrderedFacesPerElement( ___2225 ___1904, ___2225 ___2112, ___2225 ___2157); ___1170 ___1664( tecplot::FECellType const* feCellType, ___2225                  ___1904, ___2225                  ___2112, ___2225                  ___2157); EXTERN void ___1776(___4579 const* ___3140, ___4579* ___4263, int32_t& ___2839, ___372 ___1994); EXTERN CollapsedStatus_e ___1772( ___804 const*                                ___802, ___800 const*                                ___798, tecplot::___2138::ValueProducerInterface const& ___3876); EXTERN CollapsedStatus_e ___1772( ___804 const*               ___802, ___800 const*               ___798, tecplot::ItemAddress64 const& ___2708, tecplot::ItemAddress64 const& ___2709, tecplot::ItemAddress64 const& ___2710, tecplot::ItemAddress64 const& ___2711); template <typename T> inline CollapsedStatus_e ___1773( T const* ___1294, size_t   ___2802) { REQUIRE(VALID_REF(___1294));
REQUIRE(2 <= ___2802 && ___2802 <= 4); if (___2802 == 4) { if (___1294[0] == ___1294[1]) { if (___1294[0] == ___1294[2]) { if (___1294[0] == ___1294[3]) return ___507; else return ___506; } else if (___1294[2] == ___1294[3] || ___1294[0] == ___1294[3]) { return ___506; } else { return ___509; } } else if (___1294[1] == ___1294[2]) { if (___1294[1] == ___1294[3] || ___1294[0] == ___1294[3]) return ___506; else return ___509; } else if (___1294[2] == ___1294[3]) { if (___1294[0] == ___1294[2]) return ___506; else return ___509; } else if (___1294[0] == ___1294[3]) { if (___1294[1] == ___1294[3]) return ___506; else return ___509; } else if (___1294[0] == ___1294[2] || ___1294[1] == ___1294[3]) { return ___508; } else { return ___511; } } else if (___2802 == 3) { if (___1294[0] != ___1294[1] && ___1294[0] != ___1294[2] && ___1294[1] != ___1294[2]) return ___511; else if (___1294[0] == ___1294[1] && ___1294[0] == ___1294[2]) return ___507; else return ___506; } else /* if (___2802 == 2) */ { ___476(___2802 == 2); if (___1294[0] != ___1294[1]) return ___511; else return ___507; } } template <typename T> inline CollapsedStatus_e ___1669( FECellShape_e feCellShape, T const*      ___1294, ___1170    face) { REQUIRE(VALID_ENUM(feCellShape, FECellShape_e)); REQUIRE(VALID_REF(___1294)); REQUIRE(IMPLICATION(feCellShape == FECellShape_Bar,           face == 0)); REQUIRE(IMPLICATION(feCellShape == FECellShape_Triangle,      0 <= face && face <= 2)); REQUIRE(IMPLICATION(feCellShape == FECellShape_Quadrilateral, 0 <= face && face <= 3)); REQUIRE(IMPLICATION(feCellShape == FECellShape_Tetrahedron,   0 <= face && face <= 3)); REQUIRE(IMPLICATION(feCellShape == FECellShape_Hexahedron,    0 <= face && face <= 5)); REQUIRE(IMPLICATION(feCellShape == FECellShape_Prism || feCellShape == FECellShape_Pyramid,       0 <= face && face <= 4)); size_t ___2802 = 0; T const* ___1436 = ___1294; T ___2312[2]; switch (feCellShape) { case FECellShape_Bar:         ___2802 = 2; break; case FECellShape_Tetrahedron: ___2802 = 3; break; case FECellShape_Hexahedron:  ___2802 = 4; break; case FECellShape_Pyramid:     ___2802 = face < 1 ? 4 : 3; break; case FECellShape_Prism:       ___2802 = face < 3 ? 4 : 3; break; case FECellShape_Triangle: case FECellShape_Quadrilateral: { ___2802 = 2; if (face == (feCellShape == FECellShape_Triangle ? 2 : 3)) { ___2312[0] = ___1294[face];
___2312[1] = ___1294[0]; ___1436 = ___2312; } else { ___1436 = &___1294[face]; } } break; default: ___476(___1303); break; } return ___1773(___1436, ___2802); } CollapsedStatus_e ___1669( tecplot::ElemToNodeMap&       ___2705, tecplot::ItemAddress64 const& ___449, ___1170                    face);
 #if defined ALLOW_USERDEF_NO_NEIGHBORING_ELEMENT
EXTERN ___372 ___2064(___1290 ___1273, ___2225       ___1143, ___2225       ___1250);
 #endif
 #endif
