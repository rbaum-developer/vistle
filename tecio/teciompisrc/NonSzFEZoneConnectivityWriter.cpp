#include "NonSzFEZoneConnectivityWriter.h"
#include "NodeMap.h"
#include "SzlFileLoader.h"
#include "writeValueArray.h"
namespace tecplot { namespace ___3931 { NonSzFEZoneConnectivityWriter::NonSzFEZoneConnectivityWriter( ___4633 zone, ___4633 ___341, ___37& ___36) : ___2675(zone) , m_baseZone(___341) , ___2335(___36) , m_zoneNumberLabel(SZPLT_ZONE_NUM_DESCRIPTION) {} uint64_t NonSzFEZoneConnectivityWriter::nodeMapHeaderSizeInFile(bool ___2000) { if (___2000) return 2 * valueSizeInFile<uint32_t, false>(___2000); else return 0; } ___372 NonSzFEZoneConnectivityWriter::___4527(FileWriterInterface& file) { ___372 ___2037 = ___4224; REQUIRE(file.___2039()); if ( file.___2000() ) { writeValue<uint32_t, false, 0>(file, "nodeMapMarker*", SZPLT_NODE_MAP_MARKER); writeValue<uint32_t, false, 0>(file, m_zoneNumberLabel.c_str(), (___2675 - m_baseZone + 1)); } ENSURE(VALID_BOOLEAN(___2037)); return ___2037; } uint64_t NonSzFEZoneConnectivityWriter::cellConnectivitySizeInFile(bool ___2000) { ___2722 ___2721(&___2335, ___2675 + 1); size_t ___2819 = 0; for (___1170 section = 0; section < ___2721.numSections(); ++section) { ___463 const numCellsInSection = ___2721.___1764(section+1); ___2819 += static_cast<size_t>(numCellsInSection * ___2721.getNumNodesPerCell(section+1)); } return arraySizeInFile<int32_t, false>(___2819, ___2000); } ___372 NonSzFEZoneConnectivityWriter::writeCellConnectivity(FileWriterInterface& fileWriter) { ___2722 ___2721(&___2335, ___2675 + 1); ___372 ___2037 = ___2721.___2065(); ___476(___2721.getOffsetDataType() == OffsetDataType_32Bit); for (___1170 section = 0; ___2037 && section < ___2721.numSections(); ++section) { ___463 const numCellsInSection = ___2721.___1764(section+1); size_t const ___2819 = static_cast<size_t>(numCellsInSection * ___2721.getNumNodesPerCell(section+1)); ___1963 nodeMapArray; ___2037 = ___2037 && nodeMapArray.alloc(___2819); if (___2037) { ___2721.getElemNodes<int32_t>(section+1, 1, numCellsInSection, nodeMapArray.data()); for (___1963::iterator it = nodeMapArray.begin(); it != nodeMapArray.end(___2819); ++it) *it -= 1; ___2037 = ___4560<int32_t, false, 0>(fileWriter, "NodeMap", ___2743, ___2819, nodeMapArray.data()); } } ENSURE(VALID_BOOLEAN(___2037)); return ___2037; } uint64_t NonSzFEZoneConnectivityWriter::sizeInFile(bool ___2000) { return nodeMapHeaderSizeInFile(___2000) + cellConnectivitySizeInFile(___2000); } ___372 NonSzFEZoneConnectivityWriter::write(FileWriterInterface& fileWriter) { ___372 ___2037 = ___4527(fileWriter) && writeCellConnectivity(fileWriter); return ___2037; } }}
